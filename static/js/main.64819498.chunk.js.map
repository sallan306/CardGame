{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","occupation","location","clicked","onClick","removeFriend","id","Wrapper","children","Title","App","state","friends","points","_this","setState","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","_this2","this","components_Wrapper","components_Title","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"0wFAgCeA,MA7Bf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMM,MAEhCL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCH,EAAMS,YAEtCR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BH,EAAMU,UAEpCT,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BADF,IAC6BH,EAAMW,WAIvCV,EAAAC,EAAAC,cAAA,QAAMS,QAAS,kBAAMZ,EAAMa,aAAab,EAAMc,GAAId,EAAMW,UAAUP,UAAU,UAA5E,wBClBSW,MAJf,SAAiBf,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMgB,iBCG1BC,MAJf,SAAejB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMgB,kBCqEvBE,6MAjEbC,MAAQ,CACNC,UACAC,OAAQ,KAGVR,aAAe,SAACC,GAWd,GADAQ,EAAKC,SAAS,CAAEH,YACc,UAA1BA,EAAQN,EAAG,GAAGH,SAA6C,cAAtBW,EAAKH,MAAME,OAAwB,CAC1ED,EAAQN,EAAG,GAAGH,QAAU,OACxBW,EAAKC,SAAS,CAAEF,OAAQC,EAAKH,MAAME,OAAS,IAK5C,IAHA,IAAmCG,EAAgBC,EAA/CC,EAAeN,EAAQO,OAGpB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBJ,EAHjBM,GAAgB,GAIhBN,EAAQM,GAAgBN,EAAQK,GAChCL,EAAQK,GAAeD,OAKzBF,EAAKC,SAAS,CAAEF,OAAQ,uFAOnB,IAAAU,EAAAC,KACP,OACE/B,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAD,KAAQF,KAAKb,MAAME,QAClBW,KAAKb,MAAMC,QAAQe,IAAI,SAAAC,GAAM,OAC5BnC,EAAAC,EAAAC,cAACkC,EAAD,CACExB,aAAckB,EAAKlB,aACnBC,GAAIsB,EAAOtB,GACXwB,IAAKF,EAAOtB,GACZR,KAAM8B,EAAO9B,KACbE,MAAO4B,EAAO5B,MACdC,WAAY2B,EAAO3B,WACnBC,SAAU0B,EAAO1B,SACjBC,QAASyB,EAAOzB,oBA3DV4B,mBCDlBC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.64819498.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.name}\r\n          </li>\r\n          <li>\r\n            <strong>Occupation:</strong> {props.occupation}\r\n          </li>\r\n          <li>\r\n            <strong>Location:</strong> {props.location}\r\n          </li>\r\n          <li>\r\n            <strong>Clicked:</strong> {props.clicked}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <span onClick={() => props.removeFriend(props.id, props.clicked)} className=\"remove\">\r\n        ùòÖ\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    points: 0\r\n  };\r\n\r\n  removeFriend = (id) => {\r\n    // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    // const friends = this.state.friends.filter(friend => friend.id === id);\r\n    // Set this.state.friends equal to the new friends array\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.setState({ friends });\r\n    if (friends[id-1].clicked === \"false\" && this.state.points !== \"GAME OVER\") {\r\n      friends[id-1].clicked = \"true\";\r\n      this.setState({ points: this.state.points + 1 });\r\n      \r\n      var currentIndex = friends.length, temporaryValue, randomIndex;\r\n\r\n      // While there remain elements to shuffle...\r\n      while (0 !== currentIndex) {\r\n    \r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n    \r\n        // And swap it with the current element.\r\n        temporaryValue = friends[currentIndex];\r\n        friends[currentIndex] = friends[randomIndex];\r\n        friends[randomIndex] = temporaryValue;\r\n        \r\n      }\r\n    }\r\n    else {\r\n      this.setState({ points: \"GAME OVER\" });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>{this.state.points}</Title>\r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n            removeFriend={this.removeFriend}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n            occupation={friend.occupation}\r\n            location={friend.location}\r\n            clicked={friend.clicked}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}